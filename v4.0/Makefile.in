#
# "Software pw3270, desenvolvido com base nos códigos fontes do WC3270  e X3270
# (Paul Mattes Paul.Mattes@usa.net), de emulação de terminal 3270 para acesso a
# aplicativos mainframe. Registro no INPI sob o nome G3270.
#
# Copyright (C) <2008> <Banco do Brasil S.A.>
#
# Este programa é software livre. Você pode redistribuí-lo e/ou modificá-lo sob
# os termos da GPL v.2 - Licença Pública Geral  GNU,  conforme  publicado  pela
# Free Software Foundation.
#
# Este programa é distribuído na expectativa de  ser  útil,  mas  SEM  QUALQUER
# GARANTIA; sem mesmo a garantia implícita de COMERCIALIZAÇÃO ou  de  ADEQUAÇÃO
# A QUALQUER PROPÓSITO EM PARTICULAR. Consulte a Licença Pública Geral GNU para
# obter mais detalhes.
#
# Você deve ter recebido uma cópia da Licença Pública Geral GNU junto com este
# programa;  se  não, escreva para a Free Software Foundation, Inc., 59 Temple
# Place, Suite 330, Boston, MA, 02111-1307, USA
#
# Contatos:
#
# perry.werneck@gmail.com	(Alexandre Perry de Souza Werneck)
# erico.mendonca@gmail.com	(Erico Mascarenhas de Mendonça)
# licinio@bb.com.br		(Licínio Luis Branco)
# kraucer@bb.com.br		(Kraucer Fernandes Mazuco)
# macmiranda@bb.com.br		(Marco Aurélio Caldas Miranda)
#

prefix ?= @prefix@
exec_prefix ?= @exec_prefix@
bindir ?= @bindir@
LIBDIR ?= @libdir@
PACKAGE ?= @PACKAGE@
PACKAGE_TARNAME ?= @PACKAGE_TARNAME@
PACKAGE_VERSION ?= @PACKAGE_VERSION@
PACKAGE_MANAGER ?= @PACKAGE_MANAGER@

datarootdir ?= @datarootdir@
docdir ?= @docdir@

LOCALEDIR ?= @localedir@

PLUGINS ?= @PLUGINS@
PLUGINS_UI ?= @PLUGINS_UI@
EXTENSIONS ?= @EXTENSIONS@
DLLEXT ?= @DLLEXT@

TARGETS = @PROGRAM_NAME@@EXEEXT@

TMPDIR ?= /tmp

# Set command paths and mkfb (which has to run locally)
MKFB = mkfb
CC = @CC@
LD = @LD@

CXX=@CXX@
CXXFLAGS=@CXXFLAGS@

NATIVECC = @HOST_CC@
WINDRES = @WINDRES@

####################################################################################################
# OpenOffice.org stuff
####################################################################################################
OO_SDK_HOME ?= @OO_SDK_HOME@
OO_URE_HOME ?= @OO_URE_HOME@
OO_HOME ?= @OO_HOME@
IDLC ?= @IDLC@
CPPUMAKER ?= @CPPUMAKER@
REGMERGE ?= @REGMERGE@
REGCOMP ?= @REGCOMP@
TYPES_RDB ?= @TYPES_RDB@
CPPUENV ?= @CPPUENV@

OO_LDFLAGS ?= -L$(OO_HOME)/ure/lib -L$(OO_SDK_HOME)/lib -L$(OO_URE_HOME)/lib -Wl,-rpath-link=$(OO_URE_HOME)/lib -luno_cppu -luno_cppuhelpergcc3
OO_CXXFLAGS ?= -Wno-strict-aliasing -DCPPU_ENV=$(CPPUENV) -DLANGUAGE_BINDING_NAME=\"$(CPPUENV)\" -Iuno/include -I$(OO_SDK_HOME)/include

####################################################################################################
# Set compile/link parameters
####################################################################################################

# Common parameters
DBG_CFLAGS=-DDEBUG=1 -ggdb
CFLAGS = @CFLAGS@ @OS_CFLAGS@ -g -Wall -DLIBDIR=\"$(LIBDIR)\" -DDATAROOTDIR=\"$(datarootdir)\" -DLOCALEDIR=\"$(LOCALEDIR)\" -Isrc/include

# Gtk/Gnome parameters
GUI_CFLAGS = @GTK_CFLAGS@ @LIBGNOME_CFLAGS@
GUI_LDFLAGS = @GTK_LIBS@ @LIBGNOME_LIBS@

# Application parameters
APP_CFLAGS=@APP_CFLAGS@
APP_LDFLAGS=@OS_LFLAGS@

# Library parameters
DLL_CFLAGS ?= @DLL_CFLAGS@
API_CFLAGS ?= @LIBSSL_CFLAGS@ @API_CFLAGS@
API_LDFLAGS ?= @LIBSSL_LIBS@ @OS_LFLAGS@

# Rexx parameters
REXX_CFLAGS ?= @REXX_CFLAGS@

ifeq  ($(DLLEXT),.dll)
	REXX_LDFLAGS = @REXX_LIBS@ @GTK_LIBS@ @OS_DLLFLAGS@ @LIBICONV@ -Wl,--exclude-symbols,REXXAPI_NULL_THUNK_DATA -Wl,--exclude-symbols,rexx_NULL_THUNK_DATA
else
	REXX_LDFLAGS = @REXX_LIBS@ @GTK_LIBS@ @OS_DLLFLAGS@ @LIBICONV@
endif


####################################################################################################
# Sources
####################################################################################################

APP_SRCS =	main.c iocallback.c topwindow.c terminal.c screen.c actions.c mouse.c \
			clipboard.c print.c config.c colors.c keypad.c plugin.c filetransfer.c \
			version.c draw.c tracewindow.c @OS_APPSRCS@

API_SRCS = 	XtGlue.c actions.c ansi.c apl.c charset.c ctlr.c \
			ft.c ft_cut.c ft_dft.c glue.c host.c icmd.c idle.c kybd.c \
			macros.c print.c printer.c proxy.c resources.c rpq.c screen.c see.c \
			sf.c tables.c telnet.c toggles.c trace_ds.c utf8.c util.c \
			xio.c keymap.c resolver.c log.c paste.c @OS_APISRCS@

REXX_COMMON_SRC =	common_start.c screen.c toggle.c tools.c init.c network.c
REXX_STD_SRC =		std_start.c
REXX_PLG_SRC =		plg_start.c gui.c dialogs.c actions.c

OOO_SRCS = 			main.cxx connection.cxx screen.cxx actions.cxx status.cxx

####################################################################################################
# Targets
####################################################################################################

Release:	$(foreach BIN, $(TARGETS), bin/Release/$(BIN)) \
		$(PACKAGE).@LOGOEXT@ \
		$(foreach BIN, $(PLUGINS), bin/Release/plugins/$(BIN)$(DLLEXT)) \
		$(foreach BIN, $(EXTENSIONS), bin/Release/$(BIN)$(DLLEXT))
	@install --mode=644 $(PACKAGE).@LOGOEXT@ bin/Release/$(PACKAGE).@LOGOEXT@
	@msgfmt -c -v -o bin/Release/pt_BR.mo po/pt_BR.po
	@rm -f bin/Release/gtk-runtime
	@if [ -d "@GTKRUNTIME@" ]; then ln -s "@GTKRUNTIME@" bin/Release/gtk-runtime ;fi
	@echo @PACKAGE@ Ok!

Debug:		$(foreach BIN, $(TARGETS), bin/Debug/$(BIN)) \
		$(foreach BIN, $(PLUGINS), bin/Debug/plugins/$(BIN)$(DLLEXT)) \
		$(PACKAGE).@LOGOEXT@

run: bin/Debug/@PROGRAM_NAME@@EXEEXT@ $(foreach BIN, $(PLUGINS), bin/Debug/plugins/$(BIN)$(DLLEXT)) $(PACKAGE).@LOGOEXT@
#	@msgfmt -c -v -o $(LOCALEDIR)/pt_BR/LC_MESSAGES/@PROGRAM_NAME@.mo po/pt_BR.po
	@bin/Debug/@PROGRAM_NAME@ --program-data="." --plugin-path=./bin/Debug/plugins

memcheck: bin/Debug/@PROGRAM_NAME@@EXEEXT@ $(foreach BIN, $(PLUGINS), bin/Debug/plugins/$(BIN)$(DLLEXT)) $(PACKAGE).@LOGOEXT@
	@msgfmt -c -v -o $(LOCALEDIR)/pt_BR/LC_MESSAGES/@PROGRAM_NAME@.mo po/pt_BR.po
	@cd bin/Debug ; LD_LIBRARY_PATH=. valgrind --leak-check=full ./@PROGRAM_NAME@ --program-data="../../"

####################################################################################################
# Install packages
####################################################################################################

install-package: $(PACKAGE_MANAGER)

ifeq ($(PACKAGE_MANAGER),rpm)

rpm: @PACKAGE@-@PACKAGE_VERSION@.tar.gz
	rpmbuild -ta @PACKAGE@-@PACKAGE_VERSION@.tar.gz

endif

ifeq ($(PACKAGE_MANAGER),nsi)

nsi: Release
	wine "$(HOME)/.wine/drive_c/Arquivos de programas/NSIS/makensis.exe" "$(PACKAGE).nsi"


endif

####################################################################################################
# Rules
####################################################################################################

GLOBAL_DEPENDS=src/include/*.h src/include/lib3270/*.h Makefile

####################################################################################################
# Debug Rules
####################################################################################################

obj/Debug/src/lib/%.o: src/lib/%.c src/lib/*.h $(GLOBAL_DEPENDS)
	@echo $< ...
	@mkdir -p `dirname $@`
	@$(CC) $(DBG_CFLAGS) $(CFLAGS) $(DLL_CFLAGS) $(API_CFLAGS) -o $@ -c $<

obj/Debug/src/gui/%.o: src/gui/%.c src/gui/*.h $(GLOBAL_DEPENDS)
	@echo $< ...
	@mkdir -p `dirname $@`
	@$(CC) $(DBG_CFLAGS) $(CFLAGS) $(APP_CFLAGS) $(GUI_CFLAGS) -o $@ -c $<

obj/Debug/src/gui/resources.o: src/gui/resources.rc $(PACKAGE).ico Makefile
	@echo $< ...
	@$(WINDRES) --include-dir=. -i $< -o $@

obj/Debug/version.o: src/version.c
	@echo $< ...
	@mkdir -p `dirname $@`
	@$(CC) $(DBG_CFLAGS) $(CFLAGS) -Isrc/lib -o $@ -c $<

####################################################################################################
# Release Rules
####################################################################################################

obj/Release/src/lib/%.o: src/lib/%.c src/lib/*.h $(GLOBAL_DEPENDS)
	@echo $< ...
	@mkdir -p `dirname $@`
	@$(CC) $(DLL_CFLAGS) $(API_CFLAGS) $(CFLAGS) -o $@ -c $<

obj/Release/src/gui/%.o: src/gui/%.c src/gui/*.h $(GLOBAL_DEPENDS)
	@echo $< ...
	@mkdir -p `dirname $@`
	@$(CC) $(CFLAGS) $(APP_CFLAGS) $(GUI_CFLAGS) -o $@ -c $<

obj/Release/src/gui/resources.o: src/gui/resources.rc $(PACKAGE).ico Makefile
	@echo $< ...
	@$(WINDRES) --include-dir=src/gui -i $< -o $@

obj/Release/version.o: src/version.c
	@echo $< ...
	@mkdir -p `dirname $@`
	@$(CC) $(CFLAGS) -Isrc/lib -o $@ -c $<

####################################################################################################
# Release Targets
####################################################################################################

bin/Release/@PROGRAM_NAME@@EXEEXT@: bin/Release/lib3270$(DLLEXT) $(foreach SRC, $(basename $(APP_SRCS)), obj/Release/src/gui/$(SRC).@OBJEXT@)
	@echo $@ ...
	@mkdir -p `dirname $@`
	@$(CC) @LD_RLSFLAGS@ -o $@ $^ $(APP_LDFLAGS) $(GUI_LDFLAGS)

bin/Release/lib3270$(DLLEXT): obj/Release/version.o obj/Release/src/lib/fallbacks.o $(foreach SRC, $(basename $(API_SRCS)), obj/Release/src/lib/$(SRC).@OBJEXT@)
	@echo $@ ...
	@mkdir -p `dirname $@`
	@rm -f $(basename \$(@F)).a
	@rm -f $(basename \$(@F)).def
	@$(LD) @OS_DLLFLAGS@ @LD_APIFLAGS@ @LD_RLSFLAGS@ -o $@ $^ $(API_LDFLAGS)
	@if [ -f $(basename \$(@F)).def ]; then mv -f $(basename \$(@F)).def `dirname $@` ; fi
	@if [ -f $(basename \$(@F)).a ]; then mv -f $(basename \$(@F)).a `dirname $@` ; fi

####################################################################################################
# Debug Targets
####################################################################################################

bin/Debug/@PROGRAM_NAME@@EXEEXT@: bin/Debug/lib3270$(DLLEXT) $(foreach SRC, $(basename $(APP_SRCS)), obj/Debug/src/gui/$(SRC).@OBJEXT@)
	@echo $@ ...
	@mkdir -p `dirname $@`
	@$(CC) -o $@ $^ -Lbin/Debug -l3270 -Wl,-rpath,bin/Debug $(APP_LDFLAGS) $(GUI_LDFLAGS)

bin/Debug/lib3270$(DLLEXT): obj/Debug/version.o obj/Release/src/lib/fallbacks.o $(foreach SRC, $(basename $(API_SRCS)), obj/Debug/src/lib/$(SRC).@OBJEXT@)
	@echo $@ ...
	@mkdir -p `dirname $@`
	@rm -f $(basename \$(@F)).a
	@rm -f $(basename \$(@F)).def
	@$(LD) @OS_DLLFLAGS@ -o $@ $^ $(API_LDFLAGS)

####################################################################################################
# OpenOffice.org extension
####################################################################################################

oooDebug: bin/Debug/unotest

@PROGRAM_NAME@.oxt: bin/Release/@PROGRAM_NAME@.uno@DLLEXT@ uno/@PROGRAM_NAME@.uno.rdb src/oxt/description.xml src/oxt/manifest.xml src/oxt/description.txt
	@echo $@ ...
	@rm -fr uno/oxt.tmp
	@mkdir -p uno/oxt.tmp/META-INF
	@cp src/oxt/manifest.xml uno/oxt.tmp/META-INF
	@cp src/oxt/description.xml uno/oxt.tmp
	@cp src/oxt/description.txt uno/oxt.tmp
	@cp image/default.png uno/oxt.tmp/@PROGRAM_NAME@.png
	@cp bin/Release/@PROGRAM_NAME@.uno@DLLEXT@ uno/oxt.tmp
	@cp uno/@PROGRAM_NAME@.uno.rdb uno/oxt.tmp
	@cd uno/oxt.tmp ; zip -m -r ../../@PROGRAM_NAME@.oxt .
	@echo $@ Ok.

obj/Debug/src/oxt/%.o: src/oxt/%.cxx src/oxt/*.hpp $(GLOBAL_DEPENDS) uno/include/br/com/bb/$(PACKAGE).hpp
	@echo $< ...
	@mkdir -p `dirname $@`
	@$(CXX) $(DBG_CFLAGS) $(CFLAGS) $(OO_CXXFLAGS) $(LIB3270_CFLAGS) -Iuno/include -o $@ -c $<

obj/Release/src/oxt/%.o: src/oxt/%.cxx src/oxt/*.hpp $(GLOBAL_DEPENDS) uno/include/br/com/bb/$(PACKAGE).hpp
	@echo $< ...
	@mkdir -p `dirname $@`
	@$(CXX) $(CFLAGS) $(OO_CXXFLAGS) $(LIB3270_CFLAGS) -Iuno/include -o $@ -c $<

bin/Debug/unotest: bin/Debug/@PROGRAM_NAME@.uno@DLLEXT@ obj/Debug/src/oxt/testprogram.@OBJEXT@
	@echo $@ ...
	@mkdir -p `dirname $@`
	@$(CXX) -o $@ obj/Debug/src/oxt/testprogram.@OBJEXT@ -Lbin/Debug -Wl,-rpath=bin/Debug,-rpath=$(OO_URE_HOME)/lib -l3270 $(OO_LDFLAGS)

bin/Release/@PROGRAM_NAME@.uno@DLLEXT@: bin/Release/lib3270$(DLLEXT) $(foreach SRC, $(basename $(OOO_SRCS)), obj/Release/src/oxt/$(SRC).@OBJEXT@)
	@echo $@ ...
	@mkdir -p `dirname $@`
	@$(CXX) @OS_DLLFLAGS@ -o $@ $(foreach SRC, $(basename $(OOO_SRCS)), obj/Release/src/oxt/$(SRC).@OBJEXT@) -Lbin/Release -Wl,-rpath=$(OO_URE_HOME)/lib -l3270 $(OO_LDFLAGS)

bin/Debug/@PROGRAM_NAME@.uno@DLLEXT@: bin/Debug/lib3270$(DLLEXT) $(foreach SRC, $(basename $(OOO_SRCS)), obj/Debug/src/oxt/$(SRC).@OBJEXT@)
	@echo $@ ...
	@mkdir -p `dirname $@`
	@$(CXX) @OS_DLLFLAGS@ -o $@ $(foreach SRC, $(basename $(OOO_SRCS)), obj/Debug/src/oxt/$(SRC).@OBJEXT@) -Lbin/Debug -Wl,-rpath=bin/Debug,-rpath=$(OO_URE_HOME)/lib -l3270 $(OO_LDFLAGS)

uno/%.urd: src/oxt/%.idl
	@echo $< ...
	@mkdir -p `dirname $@`
	@$(IDLC) -C -I$(OO_SDK_HOME)/idl -O`dirname $@` $<

%.uno.rdb : %.urd
	@echo $< ...
	@mkdir -p `dirname $@`
	@rm -f $@
	@$(REGMERGE) --verbose $@ / $(TYPES_RDB)
	@$(REGMERGE) --verbose $@ /UCR $<
	@$(REGMERGE) --verbose $@ / $<

uno/include/br/com/bb/$(PACKAGE).hpp: uno/$(PACKAGE).uno.rdb
	@echo $< ...
	@rm -fr ./uno/include
	@mkdir ./uno/include
	@$(CPPUMAKER) -O./uno/include -Gc -L -BUCR $<
	@touch $@

####################################################################################################
# Rexx plugin/extension
####################################################################################################

# Debug
obj/Debug/src/plugins/rexx/%.o: src/plugins/rexx/%.c src/plugins/rexx/*.h $(GLOBAL_DEPENDS)
	@echo $< ...
	@mkdir -p `dirname $@`
	@$(CC) $(CFLAGS) $(DBG_CFLAGS) $(GUI_CFLAGS) $(REXX_CFLAGS) -o $@ -c $<

bin/Debug/plugins/rx3270$(DLLEXT): 	bin/Debug/lib3270$(DLLEXT) \
					$(foreach SRC, $(REXX_PLG_SRC) $(REXX_COMMON_SRC), obj/Debug/src/plugins/rexx/$(basename $(SRC)).@OBJEXT@)
	@echo $< ...
	@mkdir -p `dirname $@`
	@$(CC) @OS_DLLFLAGS@ -o $@ $^ $(GUI_LDFLAGS) $(REXX_LDFLAGS)

bin/Debug/librx3270$(DLLEXT): 		bin/Debug/lib3270$(DLLEXT) \
					$(foreach SRC, $(REXX_STD_SRC) $(REXX_COMMON_SRC), obj/Debug/src/plugins/rexx/$(basename $(SRC)).@OBJEXT@)
	@echo $< ...
	@mkdir -p `dirname $@`
	@$(CC) @OS_DLLFLAGS@ -o $@ $^ $(REXX_LDFLAGS)

#Release
obj/Release/src/plugins/rexx/%.o: src/plugins/rexx/%.c src/plugins/rexx/*.h $(GLOBAL_DEPENDS)
	@echo $< ...
	@mkdir -p `dirname $@`
	@$(CC) $(CFLAGS) $(GUI_CFLAGS) $(REXX_CFLAGS) -o $@ -c $<

bin/Release/plugins/rx3270$(DLLEXT): 	bin/Release/lib3270$(DLLEXT) \
					$(foreach SRC, $(REXX_PLG_SRC) $(REXX_COMMON_SRC), obj/Release/src/plugins/rexx/$(basename $(SRC)).@OBJEXT@)
	@echo $< ...
	@mkdir -p `dirname $@`
	@$(CC) @OS_DLLFLAGS@ -o $@ $^ $(GUI_LDFLAGS) $(REXX_LDFLAGS)

bin/Release/librx3270$(DLLEXT): 		bin/Release/lib3270$(DLLEXT) \
					$(foreach SRC, $(REXX_STD_SRC) $(REXX_COMMON_SRC), obj/Release/src/plugins/rexx/$(basename $(SRC)).@OBJEXT@)
	@echo $< ...
	@mkdir -p `dirname $@`
	@$(CC) @OS_DLLFLAGS@ -o $@ $^ $(REXX_LDFLAGS)

####################################################################################################
# Misc Targets
####################################################################################################

$(PACKAGE).desktop: Makefile
	@rm -f $@
	@echo "[Desktop Entry]" > $@
	@echo "Encoding=UTF-8" >> $@
	@echo "GenericName=$(PACKAGE)" >> $@
	@echo "Name=3270 Terminal" >> $@
	@echo "Name[pt_BR]=Terminal 3270" >> $@
	@echo "Comment=IBM 3270 Terminal emulator" >> $@
	@echo "Exec=$(bindir)/$(PACKAGE)" >> $@
	@echo "Icon=$(datarootdir)/$(PACKAGE)/$(PACKAGE).@LOGOEXT@" >> $@
	@echo "Terminal=false" >> $@
	@echo "Type=Application" >> $@

$(PACKAGE).ico: @ICONFILE@
	@cp @ICONFILE@ $@

$(PACKAGE).@LOGOEXT@: @LOGOFILE@
	@convert @LOGOFILE@ $@

src/lib/fallbacks.c:  src/lib/X3270.xad
	@make -C src/lib fallbacks.c

src/version.c:	src/lib/*.c src/mkversion.sh Makefile $(GLOBAL_DEPENDS)
	@src/mkversion.sh

sources.lst: Makefile src/gui/*.c src/lib/*.c src/plugins/rexx/*.c Makefile
	@rm -f $@
	@for i in src/gui/*.c; do echo $$i >> $@; done
	@for i in src/lib/*.c; do echo $$i >> $@; done
	@for i in src/plugins/rexx/*.c; do echo $$i >> $@; done

$(PACKAGE).pot: sources.lst
	@echo $@ ...
	@xgettext	--files-from=sources.lst \
			--default-domain=$(PACKAGE) --language=C \
			--keyword=_ --keyword=N_ --keyword=MSG_:2 --sort-output --output=- \
	| sed "s&PACKAGE VERSION&$(PACKAGE) $(PACKAGE_VERSION)&;s&CHARSET&UTF-8&" > $@

$(PACKAGE).po: $(PACKAGE).pot
	@msginit --no-translator -o $(PACKAGE).po -i $(PACKAGE).pot

tgz: $(PACKAGE)-$(PACKAGE_VERSION).tar.gz

install: Release po/pt_BR.po $(PACKAGE).desktop

	@mkdir -p $(DESTDIR)/$(bindir)
	@mkdir -p $(DESTDIR)/$(LIBDIR)/$(PACKAGE)/plugins
	@mkdir -p $(DESTDIR)/$(LIBDIR)/pkgconfig
	@mkdir -p $(DESTDIR)/$(datarootdir)/$(PACKAGE)/ui
	@mkdir -p $(DESTDIR)/$(LOCALEDIR)
	@mkdir -p $(DESTDIR)/@includedir@/lib3270

	@for i in $(TARGETS); do install --mode=755 bin/Release/$$i $(DESTDIR)/$(bindir); done

	@for i in $(PLUGINS); do install --mode=755 bin/Release/plugins/$$i$(DLLEXT) $(DESTDIR)/$(LIBDIR)/$(PACKAGE)/plugins; done
	@for i in $(PLUGINS_UI); do install --mode=644 ui/$$i $(DESTDIR)/$(datarootdir)/$(PACKAGE)/ui; done

	@install --mode=755 bin/Release/lib3270$(DLLEXT) $(DESTDIR)/$(LIBDIR)

	@install --mode=644 *.xml $(DESTDIR)/$(datarootdir)/$(PACKAGE)
	@install --mode=644 ui/default.xml $(DESTDIR)/$(datarootdir)/$(PACKAGE)/ui
	@install --mode=644 ui/debug.xml $(DESTDIR)/$(datarootdir)/$(PACKAGE)/ui
	@install --mode=644 ui/default.act $(DESTDIR)/$(datarootdir)/$(PACKAGE)/ui
	@install --mode=644 $(PACKAGE).@LOGOEXT@ $(DESTDIR)/$(datarootdir)/$(PACKAGE)
	@install --mode=644 colors.conf $(DESTDIR)/$(datarootdir)/$(PACKAGE)

	@install --mode=644 src/include/lib3270.h $(DESTDIR)/@includedir@
	@install --mode=644 src/include/lib3270/*.h $(DESTDIR)/@includedir@/lib3270
	@install --mode=644 lib3270.pc $(DESTDIR)/$(LIBDIR)/pkgconfig/$(PACKAGE).pc

	@mkdir -p $(DESTDIR)/$(datarootdir)/applications/
	@desktop-file-install	--mode 644 \
				--dir $(DESTDIR)/$(datarootdir)/applications \
				--add-category TerminalEmulator \
				$(PACKAGE).desktop

	@mkdir -p $(DESTDIR)/$(LOCALEDIR)/pt_BR/LC_MESSAGES
	@msgfmt -c -v -o $(DESTDIR)/$(LOCALEDIR)/pt_BR/LC_MESSAGES/pw3270.mo po/pt_BR.po

	@mkdir -p $(DESTDIR)/$(docdir)
	@install --mode=644 LICENÇA $(DESTDIR)/$(docdir)
	@install --mode=644 LICENSE $(DESTDIR)/$(docdir)
	@install --mode=644 AUTHORS $(DESTDIR)/$(docdir)


$(PACKAGE)-$(PACKAGE_VERSION).tar.gz: clean

	@rm -fr $(TMPDIR)/$(PACKAGE).tmp

	@mkdir -p $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)
	@cp *.spec $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)
	@cp pw3270.cbp $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)
	@cp *.m4 $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)
	@cp configure.ac $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)
	@cp *.in $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)
	@cp *.conf $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)
	@cp *.xml $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)

	@cp AUTHORS $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)
	@cp LICENSE $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)
	@cp LICENÇA $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)

	@mkdir -p $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)/image
	@cp -r image/* $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)/image

	@mkdir -p $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)/ui
	@cp -r ui/* $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)/ui

	@mkdir -p $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)/po
	@cp -r po/* $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)/po

	@mkdir -p $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)/src
	@cp -r src/* $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)/src

	@mkdir -p $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)/scripts
	@cp -r scripts/* $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)/scripts

	@mkdir -p $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)/debian
	@cp -r debian/* $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)/debian

	@rm -f $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)/debian/control
	@rm -f $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)/Makefile
	@rm -f $(TMPDIR)/$(PACKAGE).tmp/$(PACKAGE)-$(PACKAGE_VERSION)/*.layout
	@tar --create --gzip --verbose --directory $(TMPDIR)/$(PACKAGE).tmp --exclude=.svn --file=$@ $(PACKAGE)-$(PACKAGE_VERSION)
	@echo $@

distclean: clean

clean:
	@rm -fr obj
	@rm -fr uno
	@rm -fr bin
	@rm -fr src/oxt/br
	@rm -fr src/oxt/com
	@rm -f	src/lib/fallbacks.c
	@rm -f	src/lib/version.o
	@rm -f	src/lib/mkfb.exe
	@rm -f	src/version.c
	@rm -f	sources.lst
	@rm -f	$(PACKAGE)-$(PACKAGE_VERSION).tar.gz
	@rm -f $(PACKAGE).pot
	@rm -f $(PACKAGE).po
	@rm -fr autom4te.cache
	@rm -f config.status
	@rm -f *.lnk
	@rm -fr locale
	@rm -f *.nsi
	@rm -f $(PACKAGE).ico
	@rm -f $(PACKAGE).@LOGOEXT@
	@rm -f @PROGRAM_NAME@.oxt

	@if [ -e src/plugins/rexx/Makefile ]; then make -C src/plugins/rexx clean; fi
	@if [ -e src/extensions/uno/Makefile ]; then make -C src/extensions/uno clean; fi

	@find . -name "*.obj" -exec mv -f {} $(TMPDIR) \;
	@find . -name "*.map" -exec mv -f {} $(TMPDIR) \;
	@find . -name "*.def" -exec mv -f {} $(TMPDIR) \;
	@find . -name "*.lnk" -exec mv -f {} $(TMPDIR) \;
	@find . -name "*.a" -exec mv -f {} $(TMPDIR) \;
	@find . -name "*.save" -exec mv -f {} $(TMPDIR) \;
	@find . -name "*~" -exec mv -f {} $(TMPDIR) \;
	@find . -name "*.bak" -exec mv -f {} $(TMPDIR) \;
	@find . -name "*.exe" -exec mv -f {} $(TMPDIR) \;
	@find . -name "*.log" -exec mv -f {} $(TMPDIR) \;
	@find . -name "leak.out" -exec mv -f {} $(TMPDIR) \;
	@find . -name "*.tmp" -exec mv -f {} $(TMPDIR) \;
